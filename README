# Install gcloud tool - https://cloud.google.com/sdk/docs/install#deb 
sudo apt update 
sudo apt install wget -y 
wget https://raw.githubusercontent.com/Jaibw/bigquery/master/install-gcloud.sh 
sh install-gcloud.sh 
which gcloud 

## gcloud auth 
gcloud auth login --no-launch-browser 
gcloud config set project techlanders-aug22
gcloud compute instances list --format='table(name,status,tags.list())'

## Open BigQuery and run below query 
SELECT name, SUM(number) as total_people
    FROM `bigquery-public-data.usa_names.usa_1910_2013`
    WHERE state = 'TX'
    GROUP BY name, state
    ORDER BY total_people DESC
    LIMIT 20

## Service account creation 
gcloud auth list
gcloud services list
# gcloud services enable bigquery.googleapis.com
export PROJECT_ID=techlanders-aug22
gcloud iam service-accounts create USER-bigquery-sa --display-name "USER bigquery service account"
gcloud iam service-accounts keys create ~/key.json --iam-account USER-bigquery-sa@${PROJECT_ID}.iam.gserviceaccount.com
gcloud projects add-iam-policy-binding ${PROJECT_ID} --member "serviceAccount:USER-bigquery-sa@${PROJECT_ID}.iam.gserviceaccount.com"  --role "roles/bigquery.user"
gcloud projects add-iam-policy-binding ${PROJECT_ID} --member "serviceAccount:USER-bigquery-sa@${PROJECT_ID}.iam.gserviceaccount.com"  --role "roles/bigquery.dataEditor"
export GOOGLE_APPLICATION_CREDENTIALS=~/key.json

## python integration 
export GOOGLE_APPLICATION_CREDENTIALS=~/key.json
sudo apt install python3-pip
pip3 install --upgrade google-cloud-bigquery
wget https://raw.githubusercontent.com/Jaibw/bigquery/master/bigquery001.py 
python3 bigquery001.py  

## load data using python 
gsutil cp gs://cloud-samples-data/bigquery/us-states/us-states.json ~/.
cat us-states.json
wget https://raw.githubusercontent.com/Jaibw/bigquery/master/bigquery002.py 
cat bigquery002.py 
sed -i 's/USER/jaikumer/g' bigquery002.py
cat bigquery002.py 
python3 bigquery002.py
## open GCP > BigQuery 

## Enable Jupyter notebook
pip3 install jupyter
# reconnect ssh session 
export GOOGLE_APPLICATION_CREDENTIALS=~/key.json
jupyter notebook --port=8888 --ip=0.0.0.0
Open chrome and access http://PUBLIC_IP:8888/?token=TOKEN 

## Java Integration 
sudo apt install default-jdk maven git -y 
export GOOGLE_APPLICATION_CREDENTIALS=~/key.json
git clone https://github.com/Jaibw/monitorFinal.git
cd monitorFinal
sed -i 's/USER/jaikumer/g' src/main/java/com/example/monitorFinal/MonitorFinalApplication.java
mvn spring-boot:run
## launch another ssh and then run below command 
curl localhost:5000

## https://cloud.google.com/dataproc/docs/tutorials/bigquery-connector-spark-example#scala 

# https://cloud.google.com/bigquery/docs/reference/standard-sql/functions-and-operators#sum 
SELECT MIN(x) as avg
FROM 
UNNEST([0, 2, 4, 4, 5]) as x;

SELECT MAX(x) as avg
FROM 
UNNEST([0, 2, 4, 4, 5]) as x;

SELECT AVG(x) as avg
FROM 
UNNEST([0, 2, 4, 4, 5]) as x;

SELECT SUM(x) as avg
FROM 
UNNEST([0, 2, 4, 4, 5]) as x;


CREATE TEMP FUNCTION AddFourAndDivide(x INT64, y INT64)
RETURNS FLOAT64
AS (
  (x + 4) / y
);
 
SELECT
  val, AddFourAndDivide(val, 2)
FROM
  UNNEST([2,3,5,8]) AS val

CREATE TEMP FUNCTION customGreeting(a STRING)
RETURNS STRING
LANGUAGE js
AS r"""
  var d = new Date();
  if (d.getHours() < 12) {
    return 'Good Morning, ' + a + '!';
  } else {
    return 'Good Evening, ' + a + '!';
  }
""";

SELECT customGreeting(names) AS everyone
FROM UNNEST(['Hannah', 'Max', 'Jakob']) AS names;
